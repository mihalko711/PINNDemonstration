#############################################################################
# Generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#  Dec 24, 2024 06:51:15 PM +03  platform: Windows NT
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    ::vTcl::MessageBox -title Error -message  "You must open project files from within PAGE."
    exit}


set vTcl(actual_gui_font_dft_desc)  TkDefaultFont
set vTcl(actual_gui_font_dft_name)  TkDefaultFont
set vTcl(actual_gui_font_text_desc)  TkTextFont
set vTcl(actual_gui_font_text_name)  TkTextFont
set vTcl(actual_gui_font_fixed_desc)  TkFixedFont
set vTcl(actual_gui_font_fixed_name)  TkFixedFont
set vTcl(actual_gui_font_menu_desc)  TkMenuFont
set vTcl(actual_gui_font_menu_name)  TkMenuFont
set vTcl(actual_gui_font_tooltip_desc)  TkDefaultFont
set vTcl(actual_gui_font_tooltip_name)  TkDefaultFont
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
########################################### 
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) gray40
set vTcl(analog_color_p) #c3c3c3
set vTcl(analog_color_m) beige
set vTcl(tabfg1) black
set vTcl(tabfg2) white
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
########################################### 
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 1
set vTcl(mode) Relative
set vTcl(project_theme) vista



proc vTclWindow.top2 {base} {
    global vTcl
    if {$base == ""} {
        set base .top2
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -borderwidth 5 -menu $top.m47 -background SystemButtonFace \
        -highlightcolor SystemWindowText 
    wm focusmodel $top passive
    wm geometry $top 800x600+857+443
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1000 800
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "PINN Demonstration"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "mainWnd" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    menu "$top.m47" \
        -activebackground #d9d9d9 -activeforeground black \
        -font "-family {Segoe UI} -size 9" -tearoff 0 
    ttk::frame "$top.tFr52" \
        -borderwidth 2 -relief groove -width 125 -height 75 
    vTcl:DefineAlias "$top.tFr52" "frmInfo" vTcl:WidgetProc "mainWnd" 1
    set site_3_0 $top.tFr52
    text "$site_3_0.tex53" \
        -background #b5ba87 -cursor target \
        -font "-family {Libertinus Serif} -size 12" \
        -foreground SystemWindowText -height 4 \
        -highlightbackground SystemButtonFace \
        -highlightcolor SystemWindowText -insertbackground SystemWindowText \
        -selectbackground #d9d9d9 -selectforeground black -state disabled \
        -width 10 -wrap word 
    $site_3_0.tex53 configure -font "-family {Libertinus Serif} -size 12"
    $site_3_0.tex53 insert end text
    vTcl:DefineAlias "$site_3_0.tex53" "txtProgramInfo" vTcl:WidgetProc "mainWnd" 1
    place $site_3_0.tex53 \
        -in $site_3_0 -x 0 -y 0 -width 0 -relwidth 1 -height 0 -relheight 1 \
        -anchor nw -bordermode ignore 
    ttk::frame "$top.tFr48" \
        -borderwidth 2 -relief groove -width 295 -height 355 
    vTcl:DefineAlias "$top.tFr48" "Problems" vTcl:WidgetProc "mainWnd" 1
    set site_3_0 $top.tFr48
    ttk::button "$site_3_0.tBu50" \
        -command "go_to_problem2" -text "Problem 2" -compound left 
    vTcl:DefineAlias "$site_3_0.tBu50" "btnProblem2" vTcl:WidgetProc "mainWnd" 1
    ttk::button "$site_3_0.tBu51" \
        -command "exit_event" -text "Exit" -compound left 
    vTcl:DefineAlias "$site_3_0.tBu51" "btnExit" vTcl:WidgetProc "mainWnd" 1
    ttk::button "$site_3_0.tBu49" \
        -command "go_to_problem1" -text "Problem1" -compound left 
    vTcl:DefineAlias "$site_3_0.tBu49" "btnProblem1" vTcl:WidgetProc "mainWnd" 1
    place $site_3_0.tBu50 \
        -in $site_3_0 -x 0 -relx 0.1 -y 0 -rely 0.4 -width 0 -relwidth 0.8 \
        -height 0 -relheight 0.2 -anchor nw -bordermode ignore 
    place $site_3_0.tBu51 \
        -in $site_3_0 -x 0 -relx 0.1 -y 0 -rely 0.7 -width 0 -relwidth 0.8 \
        -height 0 -relheight 0.2 -anchor nw -bordermode ignore 
    place $site_3_0.tBu49 \
        -in $site_3_0 -x 0 -relx 0.1 -y 0 -rely 0.1 -width 256 -relwidth 0 \
        -height 96 -relheight 0 -anchor nw -bordermode ignore 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tFr52 \
        -in $top -x 0 -relx 0.55 -y 0 -rely 0.1 -width 0 -relwidth 0.4 \
        -height 0 -relheight 0.8 -anchor nw -bordermode ignore 
    place $top.tFr48 \
        -in $top -x 0 -relx 0.1 -y 0 -rely 0.1 -width 0 -relwidth 0.4 \
        -height 0 -relheight 0.8 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

proc vTclWindow.top3 {base} {
    global vTcl
    if {$base == ""} {
        set base .top3
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background SystemButtonFace -highlightbackground SystemButtonFace \
        -highlightcolor SystemWindowText 
    wm focusmodel $top passive
    wm geometry $top 800x600+11+10
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1061
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "PINN для 1-мерной начально-кравеой задачи"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "Problem1" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    ttk::frame "$top.tFr59" \
        -borderwidth 2 -relief groove -width 125 -height 75 
    vTcl:DefineAlias "$top.tFr59" "input_container_1" vTcl:WidgetProc "Problem1" 1
    set site_3_0 $top.tFr59
    ttk::entry "$site_3_0.tEn61" \
        -font "-family {Segoe UI} -size 9" -cursor ibeam 
    vTcl:DefineAlias "$site_3_0.tEn61" "TEntry9" vTcl:WidgetProc "Problem1" 1
    ttk::entry "$site_3_0.tEn60" \
        -font "-family {Segoe UI} -size 9" -cursor ibeam 
    vTcl:DefineAlias "$site_3_0.tEn60" "TEntry8" vTcl:WidgetProc "Problem1" 1
    ttk::entry "$site_3_0.tEn62" \
        -font "-family {Segoe UI} -size 9" -cursor ibeam 
    vTcl:DefineAlias "$site_3_0.tEn62" "TEntry10" vTcl:WidgetProc "Problem1" 1
    ttk::entry "$site_3_0.tEn63" \
        -font "-family {Segoe UI} -size 9" -cursor ibeam 
    vTcl:DefineAlias "$site_3_0.tEn63" "TEntry11" vTcl:WidgetProc "Problem1" 1
    ttk::entry "$site_3_0.tEn64" \
        -font "-family {Segoe UI} -size 9" -cursor ibeam 
    vTcl:DefineAlias "$site_3_0.tEn64" "TEntry12" vTcl:WidgetProc "Problem1" 1
    place $site_3_0.tEn61 \
        -in $site_3_0 -x 0 -relx 0.2 -y 0 -rely 0.2 -width 0 -relwidth 0.7 \
        -height 0 -relheight 0.05 -anchor nw -bordermode ignore 
    place $site_3_0.tEn60 \
        -in $site_3_0 -x 0 -relx 0.2 -y 0 -rely 0.1 -width 0 -relwidth 0.7 \
        -height 0 -relheight 0.05 -anchor nw -bordermode ignore 
    place $site_3_0.tEn62 \
        -in $site_3_0 -x 0 -relx 0.2 -y 0 -rely 0.3 -width 0 -relwidth 0.7 \
        -height 0 -relheight 0.05 -anchor nw -bordermode ignore 
    place $site_3_0.tEn63 \
        -in $site_3_0 -x 0 -relx 0.2 -y 0 -rely 0.4 -width 0 -relwidth 0.3 \
        -height 0 -relheight 0.05 -anchor nw -bordermode ignore 
    place $site_3_0.tEn64 \
        -in $site_3_0 -x 0 -relx 0.4 -y 0 -rely 0.422 -width 0 \
        -relwidth 0.394 -height 0 -relheight 0.047 -anchor nw \
        -bordermode ignore 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.tFr59 \
        -in $top -x 0 -relx 0.05 -y 0 -rely 0.05 -width 0 -relwidth 0.4 \
        -height 0 -relheight 0.75 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

proc vTclWindow.top4 {base} {
    global vTcl
    if {$base == ""} {
        set base .top4
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background SystemButtonFace -highlightbackground SystemButtonFace \
        -highlightcolor SystemWindowText 
    wm focusmodel $top passive
    wm geometry $top 800x600+820+10
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1061
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "PINN для 2-мерной начально-краевой задачи"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "Problem2" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    ###################
    # SETTING GEOMETRY
    ###################

    vTcl:FireEvent $base <<Ready>>
}

proc 36 {args} {return 1}


Window show .
set btop1 ""
if {$vTcl(borrow)} {
    set btop1 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop1 $vTcl(tops)] != -1} {
        set btop1 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop1
Window show .top2 $btop1
if {$vTcl(borrow)} {
    $btop1 configure -background plum
}
set btop2 ""
if {$vTcl(borrow)} {
    set btop2 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop2 $vTcl(tops)] != -1} {
        set btop2 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop2
Window show .top3 $btop2
if {$vTcl(borrow)} {
    $btop2 configure -background plum
}
set btop3 ""
if {$vTcl(borrow)} {
    set btop3 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop3 $vTcl(tops)] != -1} {
        set btop3 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop3
Window show .top4 $btop3
if {$vTcl(borrow)} {
    $btop3 configure -background plum
}

