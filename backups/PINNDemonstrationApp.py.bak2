#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Dec 24, 2024 02:18:36 AM +03  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import PINNDemonstrationApp_support

_bgcolor = 'gray82'
_fgcolor = 'black'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: PINNDemonstrationApp_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'waldorf.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('clam')
    style.configure('.', font = "TkDefaultFont")
    _style_code_ran = 1

class mainWnd:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("800x600+643+159")
        top.minsize(120, 1)
        top.maxsize(1000, 800)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(borderwidth="5")
        top.configure(background="gray82")
        top.configure(highlightbackground="gray82")
        top.configure(highlightcolor="black")

        self.top = top

        self.menubar = tk.Menu(top,font="TkMenuFont",bg='gray82',fg=_fgcolor)
        top.configure(menu = self.menubar)

        _style_code()
        self.Problems = ttk.Frame(self.top)
        self.Problems.place(relx=0.1, rely=0.1, relheight=0.8, relwidth=0.4)
        self.Problems.configure(relief='groove')
        self.Problems.configure(borderwidth="2")
        self.Problems.configure(relief="groove")

        self.btnProblem1 = ttk.Button(self.Problems)
        self.btnProblem1.place(relx=0.1, rely=0.1, height=96, width=256)
        self.btnProblem1.configure(command=PINNDemonstrationApp_support.go_to_problem1)
        self.btnProblem1.configure(takefocus="")
        self.btnProblem1.configure(text='''Problem1''')
        self.btnProblem1.configure(compound='left')

        self.btnProblem2 = ttk.Button(self.Problems)
        self.btnProblem2.place(relx=0.1, rely=0.4, height=96, width=256)
        self.btnProblem2.configure(command=PINNDemonstrationApp_support.go_to_problem2)
        self.btnProblem2.configure(takefocus="")
        self.btnProblem2.configure(text='''Problem 2''')
        self.btnProblem2.configure(compound='left')

        self.btnExit = ttk.Button(self.Problems)
        self.btnExit.place(relx=0.1, rely=0.7, height=96, width=256)
        self.btnExit.configure(takefocus="")
        self.btnExit.configure(text='''Exit''')
        self.btnExit.configure(compound='left')

        self.frmInfo = ttk.Frame(self.top)
        self.frmInfo.place(relx=0.6, rely=0.1, relheight=0.8, relwidth=0.3)
        self.frmInfo.configure(relief='groove')
        self.frmInfo.configure(borderwidth="2")
        self.frmInfo.configure(relief="groove")

def start_up():
    PINNDemonstrationApp_support.main()

if __name__ == '__main__':
    PINNDemonstrationApp_support.main()




